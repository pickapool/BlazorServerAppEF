@inject IUserAccountService UserService

<MudDialog>
    <DialogContent>
        <div class="d-flex flex-column gap-2">
        <MudTextField @bind-Value="@User.EmployeeName" Label="Employee Name" Variant="Variant.Outlined" Shrinkable=true></MudTextField>
        <MudTextField @bind-Value="@User.UserAccountName" Label="Username" Variant="Variant.Outlined" Shrinkable=false ></MudTextField>
        <MudTextField @bind-Value="@User.UserAccountPassword" InputType="InputType.Password" Label="Password" Variant="Variant.Outlined" Shrinkable=false></MudTextField>
        </div>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Save</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public UserAccountModel User { get; set; } = new();
    protected override void OnInitialized()
    {
        if(User == null)
            User = new();
    }

    private async Task Submit() {
        Task t = User.UserAccountId == 0? UserService.AddUser(User) : UserService.PutUserAccountModel(User.UserAccountId, User);
        await t;
        if(t.Status == TaskStatus.RanToCompletion)
        {
            MudDialog.Close(DialogResult.Ok(true));
        } 
    }
    void Cancel() => MudDialog.Cancel();
}